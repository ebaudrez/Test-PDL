Revision history for Test::PDL

{{$NEXT}}

 - change default-setting to clearer names, remove set_options
 - add possible options-hash parameter to is_pdl et al
 - change tolerance behaviour from "diff < tol" to "diff <= tol"
 - negative tolerance now an error
 - tolerances now applied to integers
 - fails now give a count of how many values didn't match
 - two differently-shaped empties are now not equal

0.20      2022-02-26

 - strip out badvals before comparing ndarrays - https://github.com/PDLPorters/pdl/issues/388

0.19      2022-02-02

 - actually check if either value is empty

0.18      2022-02-02

 - more detailed checks if either value is null

0.17      2021-12-07

 - test updates

0.16      2021-04-29

 - removed the restriction on only real data types now that native
   complex works with PDL 2.039
 - updated regex and docs to work with new name for ndarray

0.15      2021-04-19

 - update to work with PDL 2.037 - not yet perfect with native complex types

0.14      2019-04-26

 - fix for RT ticket #122194: Tests fail with PDL 2.018 (Ed J)

0.13      2016-11-22

 - fix for RT ticket #118529: t/deep.t fails (Edward Baudrez)

0.12      2015-06-23

 - the tests started failing with recent versions of PDL; should be fixed now
   (Edward Baudrez)

0.11      2014-11-19

 - tweaked the tests so they also pass with the latest development versions of
   Test::Builder (Edward Baudrez)

0.10      2013-12-03

 - now querying PDL for the available types, instead of enumerating types
   explicitly. This should result in test_indx() being available on PDL
   2.006_91 or later, allowing tests for PDL with the new PDL_Indx data type
   (Edward Baudrez)

0.09      2013-07-02

 - fixed the tests to work with the latest development release of PDL
   (2.006_03) (Edward Baudrez)

0.08      2013-03-15

 - added tests involving null ndarrays (Edward Baudrez)
 - try to work around a warning message generated by List::MoreUtils 0.33_005
   which made the tests fail on platforms with this version (Edward Baudrez)

0.07      2013-02-12

 - try to work around spurious warning messages emitted in some tests (Edward
   Baudrez)
 - include version of List::MoreUtils and File::Map in test output in order to
   track down unexpected test failures on some platforms (Edward Baudrez)

0.06      2012-12-07

 - fixed unexpected test failure: references can stringify to negative numbers!
   (Edward Baudrez)
 - diagnose a possible problem in the arguments:
	is_pdl hist( pdl(2,3,4,5) ), pdl(1,1,1,1);
   hist() returns two ndarrays in list context, leaving the expected value
   pdl(1,1,1,1) in the third place as the test name. As this is most likely not
   what the user wanted, an error is raised when this is detected (Edward
   Baudrez)

0.05      2012-11-20

 - the first non-trial release; nothing has actually changed in the
   distribution except the version number (Edward Baudrez)

0.04      2012-10-11

 - added a function eq_pdl() to compare two ndarrays, without performing an
   actual test. If you've been wanting to compare two ndarrays outside of a test
   suite, now you can (Edward Baudrez)
 - added a function eq_pdl_diag() that, in addition to comparing two ndarrays,
   also returns the reason for failure, if any. It was written to support deep
   comparisons with Test::Deep, but you may find other uses for it, too (Edward
   Baudrez)
 - added a function test_pdl() which hides a constructor call for an object
   that can make 'special comparisons': those are useful when comparing ndarrays
   inside data structures with Test::Deep. E.g.,
      my $expected = {
         data => test_pdl( -3,9.99,2 ),
      };
      cmp_deeply function_returning_hashref(), $expected;
   See the documentation of test_pdl() for more details (Edward Baudrez)

0.03      2012-09-10

 - minor bugfixes related to distribution building and hosting on GitHub. No
   functionality added or changed (Edward Baudrez)
 - fix the POD documentation to work with the PDL docs database scraper (David
   Mertens)
 - allow setting module options at use time:
      use Test::PDL -option => $value;
   Only options that would be accepted by Test::PDL::set_options() are allowed.
   Note that you must use the lowercased option name, preceded by a dash, when
   setting options this way. (Edward Baudrez)
 - require type equality by default when comparing ndarrays. If you don't like
   this behaviour, set the option EQUAL_TYPES to false, or use Test::PDL as
   follows:
      use Test::PDL -equal_types => 0;
   (Edward Baudrez)

0.02      2012-09-07

 - initial version (Edward Baudrez, with feedback and improvements from Joel
   Berger, Chris Marshall, and David Mertens)
